# Generated by Django 5.2.3 on 2025-06-29 23:22

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Course code (e.g., IT101)', max_length=10, unique=True)),
                ('name', models.CharField(help_text='Course name', max_length=200)),
                ('description', models.TextField(help_text='Course description')),
                ('credits', models.IntegerField(help_text='Number of credit hours (1-6)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)])),
                ('level', models.CharField(choices=[('100', '100 Level'), ('200', '200 Level'), ('300', '300 Level'), ('400', '400 Level'), ('500', '500 Level'), ('600', '600 Level')], default='100', max_length=3)),
                ('course_type', models.CharField(choices=[('core', 'Core Course'), ('elective', 'Elective Course'), ('lab', 'Laboratory Course'), ('project', 'Project Course'), ('seminar', 'Seminar Course')], default='core', max_length=20)),
                ('max_students', models.IntegerField(default=50, help_text='Maximum number of students allowed', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(200)])),
                ('syllabus', models.TextField(blank=True, help_text='Course syllabus')),
                ('learning_outcomes', models.TextField(blank=True, help_text='Learning outcomes')),
                ('is_active', models.BooleanField(default=True, help_text='Course is active and available for enrollment')),
                ('semester', models.CharField(default='Fall 2024', help_text='Semester offering', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lecturer', models.ForeignKey(limit_choices_to={'role': 'lecturer'}, on_delete=django.db.models.deletion.CASCADE, related_name='teaching_courses', to=settings.AUTH_USER_MODEL)),
                ('prerequisites', models.ManyToManyField(blank=True, help_text='Prerequisite courses', to='courses.course')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'ordering': ['level', 'code'],
            },
        ),
        migrations.CreateModel(
            name='CourseMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('material_type', models.CharField(choices=[('syllabus', 'Syllabus'), ('lecture_notes', 'Lecture Notes'), ('assignment', 'Assignment'), ('reading', 'Reading Material'), ('video', 'Video'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('file_url', models.URLField(blank=True, help_text='URL to the material file')),
                ('file_name', models.CharField(blank=True, max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('is_public', models.BooleanField(default=True, help_text='Visible to all enrolled students')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='courses.course')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_materials', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('enrolled', 'Enrolled'), ('dropped', 'Dropped'), ('completed', 'Completed'), ('pending', 'Pending Approval')], default='enrolled', max_length=20)),
                ('grade', models.CharField(blank=True, choices=[('A+', 'A+'), ('A', 'A'), ('A-', 'A-'), ('B+', 'B+'), ('B', 'B'), ('B-', 'B-'), ('C+', 'C+'), ('C', 'C'), ('C-', 'C-'), ('D+', 'D+'), ('D', 'D'), ('F', 'F'), ('W', 'Withdrawn'), ('I', 'Incomplete')], max_length=2, null=True)),
                ('grade_points', models.DecimalField(blank=True, decimal_places=2, help_text='Grade points (e.g., 4.0 for A)', max_digits=3, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='courses.course')),
                ('student', models.ForeignKey(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='course_enrollments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Enrollment',
                'verbose_name_plural': 'Enrollments',
                'ordering': ['-enrolled_at'],
                'unique_together': {('student', 'course')},
            },
        ),
        migrations.AddField(
            model_name='course',
            name='students',
            field=models.ManyToManyField(blank=True, related_name='enrolled_courses', through='courses.Enrollment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CourseSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('room', models.CharField(blank=True, max_length=50)),
                ('building', models.CharField(blank=True, max_length=50)),
                ('is_lab', models.BooleanField(default=False, help_text='Is this a laboratory session?')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='courses.course')),
            ],
            options={
                'ordering': ['day_of_week', 'start_time'],
                'unique_together': {('course', 'day_of_week', 'start_time')},
            },
        ),
    ]
